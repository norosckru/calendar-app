{"version":3,"sources":["reducers/authReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","helpers/fecth.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js","reducers/uiReducer.js","types/types.js"],"names":["initialState","checking","events","activeEvent","rootReducer","combineReducers","require","ui","uiReducer","calendar","state","action","type","types","eventSetActive","payload","eventAddNew","eventClearActiveEvent","eventUpdated","map","e","id","eventDeleted","filter","eventLoaded","eventLogout","auth","authLogin","authCheckingFinish","authLogout","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","event","checkgfinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","fomrLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","fomrRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Error","console","log","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","uiCloseModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById","authStartLogin","authStartRegister","authStartTokenRenew"],"mappings":"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","file":"static/js/main.412bc2ae.chunk.js","sourcesContent":["import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = ( state= initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","//import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\n/*\r\n{\r\n        id: d4s5da6s4d65465d,\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(), //como ahcer un newDate en js\r\n        end: moment().add(2, 'hours').toDate(),\r\n        notes: 'Comprar el Pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Norberto'\r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\n\r\nconst { combineReducers } = require(\"redux\");\r\nconst { uiReducer } = require(\"./uiReducer\");\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    //console.log('token', token)\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    //console.log(events)\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fecth\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;     \r\n        try {\r\n            \r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                //console.log(event)\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        try {\r\n            //console.log(event)\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            //console.log(event)\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted(id))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n               const resp = await fetchConToken('events') ;\r\n               const body = await resp.json()\r\n\r\n               const events = prepareEvents( body.eventos )\r\n\r\n               //console.log(events)\r\n\r\n               dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fecth\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        //console.log(body)\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {  \r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        //console.log(body)\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        //console.log(body)\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            //Swal.fire('Error', body.msg, 'error')\r\n            dispatch(checkgfinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkgfinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})  \r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch( logout() );\r\n\r\n\r\n    }\r\n}\r\n\r\nconst logout = () =>({\r\n    type: types.authLogout\r\n})\r\n\r\n\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ fomrLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n\r\n    const [ fomrRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n\r\n\r\n\r\n    const {lEmail, lPassword} = fomrLoginValues; \r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = fomrRegisterValues; \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        //console.log(fomrLoginValues)\r\n\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault(e);\r\n\r\n        if (rPassword1 !== rPassword2){\r\n            return Swal.fire(Error, 'Las contraseñas deben de ser iguales', 'error')\r\n        }\r\n\r\n        console.log('?')\r\n        dispatch(startRegister(rEmail, rPassword1, rName))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={ lEmail }\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={ lPassword }\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\"> \r\n                    {name}\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salida</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    //console.log(event)\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate,  } from '../../actions/events';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\n//fecha incial, saco minutos y segundos, y agrego la hora\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() )\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() )\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        //console.log('closing')\r\n        //cerrar modal\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        //console.log(e)\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        //console.log(e)\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        //console.log( formValues )\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        //validacion de fecha y hora    \r\n        if (momentStart.isSameOrAfter(momentEnd)){//si al fecha de incio e sigual o esta despues de la fecha de finalizacion es un error\r\n            //console.log('fecha 2 debe de ser mayor')\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n            \r\n        }\r\n\r\n        //validacion cajas de texto\r\n        if (title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n            \r\n\r\n        //realizas grabacion en DB pendiente\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate( formValues) ) //actualizamos evento\r\n        }else{\r\n        dispatch(eventStartAddNew(formValues)) //creamos un neuvo evento\r\n    }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        //contentLabel=\"Example Modal\"\r\n        >\r\n            <h1> {(activeEvent)? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                        //amPmAriaLabel='Select AM/PM'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                        //amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    \r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-primary fab\"\r\n        onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n/*evento hardcoreado\r\nconst events = [{\r\n    title: 'Cumpleaños del jefe',\r\n    start: moment().toDate(), //como ahcer un newDate en js\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar el Pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Norberto'\r\n    }\r\n}]*/\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //todo: leer del store, los eventos\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    //leer uid de user\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch(eventStartLoading())\r\n\r\n    }, [dispatch])\r\n\r\n    //eventos\r\n    const onDoubleClick = (e) => {\r\n        //console.log('onDoubleClick', e)\r\n        dispatch( uiOpenModal() )  \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        //console.log('onSelectEvent',e)\r\n        dispatch(eventSetActive(e))\r\n        \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        //console.log('onViewChange',e)\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n\r\n    const onSelectSlot = (e) => {\r\n        //console.log(e)\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    //se sispara con ciertos argumentos son disparados en el calendario    \r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        //console.log(event, start, end, isSelected)\r\n\r\n        //console.log(event)\r\n\r\n    const style = {\r\n        backgroundColor: ( uid === event.user._id) ? '#367CF7' : '#465660',\r\n        borderRadius: '0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n    }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n                <AddNewFab/>\r\n\r\n                {\r\n                    (activeEvent) && <DeleteEventFab />\r\n                }\r\n                \r\n                <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    \r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAuthenticated)\r\n                    ? (<Component { ...props} />)\r\n                    : ( <Redirect to='/login' />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    \r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAuthenticated)\r\n                    ? ( <Redirect to='/' />)\r\n                    : (<Component { ...props} />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n            dispatch(startChecking());\r\n\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router >\r\n            <>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={ !!uid}/>\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={ !!uid}/>\r\n                    \r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        </Router >\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\n//console.log(process.env)\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n                return{\r\n                    ...state,\r\n                    modalOpen: true\r\n                }\r\n    \r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Clean',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add New', \r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event Update', \r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] event loaded',\r\n    \r\n    \r\n   //authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout',\r\n}"],"sourceRoot":""}